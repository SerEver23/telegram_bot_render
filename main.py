import os
import telebot
import requests
from flask import Flask, request
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
SPOONACULAR_API_KEY = os.getenv("SPOONACULAR_API_KEY")

if not all([TELEGRAM_TOKEN, WEBHOOK_URL, SPOONACULAR_API_KEY]):
    raise ValueError("–ù–µ –∑–∞–¥–∞–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

bot = telebot.TeleBot(TELEGRAM_TOKEN)
app = Flask(__name__)

MUST_ANSWER_KEYWORDS = [
    "—Å–∫–∞–∂–∏—Ç–µ", "–∏—â—É", "–∫–∞–∫", "–∫—Ç–æ –∑–Ω–∞–µ—Ç", "–∫—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è", "–ø–æ–¥—Å–∫–∞–∂–∏—Ç–µ", "–∫—Ç–æ –º–æ–∂–µ—Ç", "–∑–Ω–∞–µ—Ç", "–ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ", "–∫—Ç–æ", "–ø–æ–º–æ–≥–∏—Ç–µ", "—Å—Ç–æ",
    "—Å–∫–∞–∂—ñ—Ç—å", "—à—É–∫–∞—é", "—è–∫", "—Ö—Ç–æ –∑–Ω–∞—î", "—Ö—Ç–æ –∑–∞–π–º–∞—î—Ç—å—Å—è", "–ø—ñ–¥–∫–∞–∂—ñ—Ç—å", "–ø—ñ–¥–∫–∞–∑–∞—Ç–∏", "—Ö—Ç–æ –º–æ–∂–µ", "–∑–Ω–∞—î", "–ü–æ—Ä–∞–¥—å—Ç–µ", "—Ö—Ç–æ", "–¥–æ–ø–æ–º–æ–∂—ñ—Ç—å", "—Å—Ç–æ",
    "tell me", "looking for", "how", "who knows", "who does", "who handles", "can you tell me", "who can", "knows", "Please advise", "who", "help", "service station"
]

@app.route(f"/{TELEGRAM_TOKEN}", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return "OK", 200

@bot.message_handler(commands=['recipe', '—Ä–µ—Ü–µ–ø—Ç'])
def send_recipe(message):
    query = message.text.replace('/recipe', '').replace('/—Ä–µ—Ü–µ–ø—Ç', '').strip()
    if not query:
        bot.reply_to(message, "üçΩ –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä: `/recipe pasta`")
        return

    url = f"https://api.spoonacular.com/recipes/complexSearch"
    params = {
        "query": query,
        "number": 1,
        "apiKey": SPOONACULAR_API_KEY
    }

    try:
        response = requests.get(url, params=params)
        data = response.json()

        if data.get("results"):
            recipe = data["results"][0]
            title = recipe["title"]
            link = f"https://spoonacular.com/recipes/{title.replace(' ', '-')}-{recipe['id']}"
            bot.reply_to(message, f"ü•ó {title}\nüîó {link}")
        else:
            bot.reply_to(message, "üôÅ –†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ Spoonacular:", e)
        bot.reply_to(message, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ä–µ—Ü–µ–ø—Ç–∞.")

@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_message(message):
    text = message.text.strip()
    lower_text = text.lower()

    must_answer = any(keyword in lower_text for keyword in MUST_ANSWER_KEYWORDS)

    if not must_answer:
        if len(text) > 700:
            return
        if sum(text.count(e) for e in "üåûüå≤üè°üçΩüé®üë´üë©‚Äçüè´‚úÖ‚ùåüìåüìû") >= 4:
            return
        if not any(lower_text.startswith(q) for q in ["–∫–∞–∫", "—á—Ç–æ", "–ø–æ—á–µ–º—É", "–∑–∞—á–µ–º", "–≥–¥–µ", "–º–æ–∂–Ω–æ –ª–∏", "–∫—Ç–æ", "–µ—Å—Ç—å –ª–∏", "who", "how", "where", "can"]) and "?" not in lower_text:
            return

    bot.send_chat_action(message.chat.id, 'typing')

    try:
        # –ú–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –ò–ò –∏–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ —à–∞–±–ª–æ–Ω—É –∑–¥–µ—Å—å
        bot.reply_to(message, "ü§ñ –ù–∞–ø–∏—à–∏—Ç–µ `/recipe –±–æ—Ä—â`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)

def start_webhook():
    bot.remove_webhook()
    webhook_url = f""{https://telegram-recipe-bot-o1dc.onrender.com}/{7876262231:AAH1J7Tci9CrI5IizkrT8PUvnMI74jJ3Vzo}""
    bot.set_webhook(webhook_url)
    print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: {webhook_url}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))

if __name__ == "__main__":
    start_webhook()
